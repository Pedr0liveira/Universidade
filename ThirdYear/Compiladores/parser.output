Terminals unused in grammar

   ASP
   LSBRACE
   RSBRACE
   DOT


Grammar

    0 $accept: program $end

    1 program: decls

    2 decls: decl
    3      | decl decls

    4 decl: ids DPOINTS type SEMI
    5     | ids DPOINTS type ASSIGN exp SEMI
    6     | ID LPAR RPAR DPOINTS type LCBRACE stms RCBRACE SEMI
    7     | ID LPAR argdefs RPAR DPOINTS type LCBRACE stms RCBRACE SEMI
    8     | DEFINE ID type SEMI

    9 type: INT
   10     | FLOAT
   11     | STRING
   12     | BOOL
   13     | type LPAR exp RPAR
   14     | VOID

   15 ids: ID
   16    | ID COMMA ids

   17 stms: decls
   18     | ID exp SEMI
   19     | IF exp THEN LCBRACE stms RCBRACE SEMI
   20     | IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   21     | WHILE exp DO LCBRACE stms RCBRACE SEMI
   22     | RETURN exp SEMI
   23     | NEXT SEMI
   24     | BREAK SEMI
   25     | PRINT LPAR ids RPAR SEMI
   26     | PRINT LPAR STRING RPAR SEMI
   27     | PRINT LPAR ID exp RPAR SEMI
   28     | INPUT LPAR ID RPAR SEMI

   29 argdefs: argdef
   30        | argdef COMMA argdefs

   31 argdef: ID DPOINTS type

   32 exp: ID
   33    | INTEGER
   34    | FLOATER
   35    | LSTRING
   36    | BOOLLIT
   37    | exp ADD exp
   38    | exp SUB exp
   39    | exp MUL exp
   40    | exp DIV exp
   41    | exp POW exp
   42    | MOD exp
   43    | exp AND exp
   44    | exp OR exp
   45    | exp EQUALS exp
   46    | exp NOTEQU exp
   47    | exp LESS exp
   48    | exp BIGGER exp
   49    | exp LESSEQU exp
   50    | exp BIGGEREQU exp
   51    | NOT exp
   52    | SUB exp
   53    | LPAR exp RPAR
   54    | ID ASSIGN exp


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 33
FLOATER (259) 34
LSTRING (260) 35
ID (261) 6 7 8 15 16 18 27 28 31 32 54
BOOLLIT (262) 36
ASP (263)
LCBRACE (264) 6 7 19 20 21
RCBRACE (265) 6 7 19 20 21
LSBRACE (266)
RSBRACE (267)
LPAR (268) 6 7 13 25 26 27 28 53
RPAR (269) 6 7 13 25 26 27 28 53
DOT (270)
DPOINTS (271) 4 5 6 7 31
INT (272) 9
FLOAT (273) 10
STRING (274) 11 26
BOOL (275) 12
VOID (276) 14
DEFINE (277) 8
IF (278) 19 20
THEN (279) 19 20
ELSE (280) 20
WHILE (281) 21
DO (282) 21
RETURN (283) 22
BREAK (284) 24
NEXT (285) 23
ASSIGN (286) 5 54
PRINT (287) 25 26 27
INPUT (288) 28
SEMI (289) 4 5 6 7 8 18 19 20 21 22 23 24 25 26 27 28
COMMA (290) 16 30
OR (291) 44
AND (292) 43
NOT (293) 51
EQUALS (294) 45
LESS (295) 47
BIGGER (296) 48
LESSEQU (297) 49
BIGGEREQU (298) 50
NOTEQU (299) 46
ADD (300) 37
SUB (301) 38 52
DIV (302) 40
MUL (303) 39
MOD (304) 42
POW (305) 41


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
decls (53)
    on left: 2 3, on right: 1 3 17
decl (54)
    on left: 4 5 6 7 8, on right: 2 3
type (55)
    on left: 9 10 11 12 13 14, on right: 4 5 6 7 8 13 31
ids (56)
    on left: 15 16, on right: 4 5 16 25
stms (57)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28, on right: 6 7 19
    20 21
argdefs (58)
    on left: 29 30, on right: 7 30
argdef (59)
    on left: 31, on right: 29 30
exp (60)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    50 51 52 53 54, on right: 5 13 18 19 20 21 22 27 37 38 39 40 41
    42 43 44 45 46 47 48 49 50 51 52 53 54


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    DEFINE  shift, and go to state 2

    program  go to state 3
    decls    go to state 4
    decl     go to state 5
    ids      go to state 6


State 1

    6 decl: ID . LPAR RPAR DPOINTS type LCBRACE stms RCBRACE SEMI
    7     | ID . LPAR argdefs RPAR DPOINTS type LCBRACE stms RCBRACE SEMI
   15 ids: ID .
   16    | ID . COMMA ids

    LPAR   shift, and go to state 7
    COMMA  shift, and go to state 8

    $default  reduce using rule 15 (ids)


State 2

    8 decl: DEFINE . ID type SEMI

    ID  shift, and go to state 9


State 3

    0 $accept: program . $end

    $end  shift, and go to state 10


State 4

    1 program: decls .

    $default  reduce using rule 1 (program)


State 5

    2 decls: decl .
    3      | decl . decls

    ID      shift, and go to state 1
    DEFINE  shift, and go to state 2

    $default  reduce using rule 2 (decls)

    decls  go to state 11
    decl   go to state 5
    ids    go to state 6


State 6

    4 decl: ids . DPOINTS type SEMI
    5     | ids . DPOINTS type ASSIGN exp SEMI

    DPOINTS  shift, and go to state 12


State 7

    6 decl: ID LPAR . RPAR DPOINTS type LCBRACE stms RCBRACE SEMI
    7     | ID LPAR . argdefs RPAR DPOINTS type LCBRACE stms RCBRACE SEMI

    ID    shift, and go to state 13
    RPAR  shift, and go to state 14

    argdefs  go to state 15
    argdef   go to state 16


State 8

   16 ids: ID COMMA . ids

    ID  shift, and go to state 17

    ids  go to state 18


State 9

    8 decl: DEFINE ID . type SEMI

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    STRING  shift, and go to state 21
    BOOL    shift, and go to state 22
    VOID    shift, and go to state 23

    type  go to state 24


State 10

    0 $accept: program $end .

    $default  accept


State 11

    3 decls: decl decls .

    $default  reduce using rule 3 (decls)


State 12

    4 decl: ids DPOINTS . type SEMI
    5     | ids DPOINTS . type ASSIGN exp SEMI

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    STRING  shift, and go to state 21
    BOOL    shift, and go to state 22
    VOID    shift, and go to state 23

    type  go to state 25


State 13

   31 argdef: ID . DPOINTS type

    DPOINTS  shift, and go to state 26


State 14

    6 decl: ID LPAR RPAR . DPOINTS type LCBRACE stms RCBRACE SEMI

    DPOINTS  shift, and go to state 27


State 15

    7 decl: ID LPAR argdefs . RPAR DPOINTS type LCBRACE stms RCBRACE SEMI

    RPAR  shift, and go to state 28


State 16

   29 argdefs: argdef .
   30        | argdef . COMMA argdefs

    COMMA  shift, and go to state 29

    $default  reduce using rule 29 (argdefs)


State 17

   15 ids: ID .
   16    | ID . COMMA ids

    COMMA  shift, and go to state 8

    $default  reduce using rule 15 (ids)


State 18

   16 ids: ID COMMA ids .

    $default  reduce using rule 16 (ids)


State 19

    9 type: INT .

    $default  reduce using rule 9 (type)


State 20

   10 type: FLOAT .

    $default  reduce using rule 10 (type)


State 21

   11 type: STRING .

    $default  reduce using rule 11 (type)


State 22

   12 type: BOOL .

    $default  reduce using rule 12 (type)


State 23

   14 type: VOID .

    $default  reduce using rule 14 (type)


State 24

    8 decl: DEFINE ID type . SEMI
   13 type: type . LPAR exp RPAR

    LPAR  shift, and go to state 30
    SEMI  shift, and go to state 31


State 25

    4 decl: ids DPOINTS type . SEMI
    5     | ids DPOINTS type . ASSIGN exp SEMI
   13 type: type . LPAR exp RPAR

    LPAR    shift, and go to state 30
    ASSIGN  shift, and go to state 32
    SEMI    shift, and go to state 33


State 26

   31 argdef: ID DPOINTS . type

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    STRING  shift, and go to state 21
    BOOL    shift, and go to state 22
    VOID    shift, and go to state 23

    type  go to state 34


State 27

    6 decl: ID LPAR RPAR DPOINTS . type LCBRACE stms RCBRACE SEMI

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    STRING  shift, and go to state 21
    BOOL    shift, and go to state 22
    VOID    shift, and go to state 23

    type  go to state 35


State 28

    7 decl: ID LPAR argdefs RPAR . DPOINTS type LCBRACE stms RCBRACE SEMI

    DPOINTS  shift, and go to state 36


State 29

   30 argdefs: argdef COMMA . argdefs

    ID  shift, and go to state 13

    argdefs  go to state 37
    argdef   go to state 16


State 30

   13 type: type LPAR . exp RPAR

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 47


State 31

    8 decl: DEFINE ID type SEMI .

    $default  reduce using rule 8 (decl)


State 32

    5 decl: ids DPOINTS type ASSIGN . exp SEMI

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 48


State 33

    4 decl: ids DPOINTS type SEMI .

    $default  reduce using rule 4 (decl)


State 34

   13 type: type . LPAR exp RPAR
   31 argdef: ID DPOINTS type .

    LPAR  shift, and go to state 30

    $default  reduce using rule 31 (argdef)


State 35

    6 decl: ID LPAR RPAR DPOINTS type . LCBRACE stms RCBRACE SEMI
   13 type: type . LPAR exp RPAR

    LCBRACE  shift, and go to state 49
    LPAR     shift, and go to state 30


State 36

    7 decl: ID LPAR argdefs RPAR DPOINTS . type LCBRACE stms RCBRACE SEMI

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    STRING  shift, and go to state 21
    BOOL    shift, and go to state 22
    VOID    shift, and go to state 23

    type  go to state 50


State 37

   30 argdefs: argdef COMMA argdefs .

    $default  reduce using rule 30 (argdefs)


State 38

   33 exp: INTEGER .

    $default  reduce using rule 33 (exp)


State 39

   34 exp: FLOATER .

    $default  reduce using rule 34 (exp)


State 40

   35 exp: LSTRING .

    $default  reduce using rule 35 (exp)


State 41

   32 exp: ID .
   54    | ID . ASSIGN exp

    ASSIGN  shift, and go to state 51

    $default  reduce using rule 32 (exp)


State 42

   36 exp: BOOLLIT .

    $default  reduce using rule 36 (exp)


State 43

   53 exp: LPAR . exp RPAR

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 52


State 44

   51 exp: NOT . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 53


State 45

   52 exp: SUB . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 54


State 46

   42 exp: MOD . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 55


State 47

   13 type: type LPAR exp . RPAR
   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    RPAR       shift, and go to state 56
    OR         shift, and go to state 57
    AND        shift, and go to state 58
    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69


State 48

    5 decl: ids DPOINTS type ASSIGN exp . SEMI
   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    SEMI       shift, and go to state 70
    OR         shift, and go to state 57
    AND        shift, and go to state 58
    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69


State 49

    6 decl: ID LPAR RPAR DPOINTS type LCBRACE . stms RCBRACE SEMI

    ID      shift, and go to state 71
    DEFINE  shift, and go to state 2
    IF      shift, and go to state 72
    WHILE   shift, and go to state 73
    RETURN  shift, and go to state 74
    BREAK   shift, and go to state 75
    NEXT    shift, and go to state 76
    PRINT   shift, and go to state 77
    INPUT   shift, and go to state 78

    decls  go to state 79
    decl   go to state 5
    ids    go to state 6
    stms   go to state 80


State 50

    7 decl: ID LPAR argdefs RPAR DPOINTS type . LCBRACE stms RCBRACE SEMI
   13 type: type . LPAR exp RPAR

    LCBRACE  shift, and go to state 81
    LPAR     shift, and go to state 30


State 51

   54 exp: ID ASSIGN . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 82


State 52

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp
   53    | LPAR exp . RPAR

    RPAR       shift, and go to state 83
    OR         shift, and go to state 57
    AND        shift, and go to state 58
    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69


State 53

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp
   51    | NOT exp .

    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69

    $default  reduce using rule 51 (exp)


State 54

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp
   52    | SUB exp .

    DIV  shift, and go to state 67
    MUL  shift, and go to state 68
    POW  shift, and go to state 69

    $default  reduce using rule 52 (exp)


State 55

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   42    | MOD exp .
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    POW  shift, and go to state 69

    $default  reduce using rule 42 (exp)


State 56

   13 type: type LPAR exp RPAR .

    $default  reduce using rule 13 (type)


State 57

   44 exp: exp OR . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 84


State 58

   43 exp: exp AND . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 85


State 59

   45 exp: exp EQUALS . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 86


State 60

   47 exp: exp LESS . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 87


State 61

   48 exp: exp BIGGER . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 88


State 62

   49 exp: exp LESSEQU . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 89


State 63

   50 exp: exp BIGGEREQU . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 90


State 64

   46 exp: exp NOTEQU . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 91


State 65

   37 exp: exp ADD . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 92


State 66

   38 exp: exp SUB . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 93


State 67

   40 exp: exp DIV . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 94


State 68

   39 exp: exp MUL . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 95


State 69

   41 exp: exp POW . exp

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 96


State 70

    5 decl: ids DPOINTS type ASSIGN exp SEMI .

    $default  reduce using rule 5 (decl)


State 71

    6 decl: ID . LPAR RPAR DPOINTS type LCBRACE stms RCBRACE SEMI
    7     | ID . LPAR argdefs RPAR DPOINTS type LCBRACE stms RCBRACE SEMI
   15 ids: ID .
   16    | ID . COMMA ids
   18 stms: ID . exp SEMI

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 97
    COMMA    shift, and go to state 8
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    $default  reduce using rule 15 (ids)

    exp  go to state 98


State 72

   19 stms: IF . exp THEN LCBRACE stms RCBRACE SEMI
   20     | IF . exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 99


State 73

   21 stms: WHILE . exp DO LCBRACE stms RCBRACE SEMI

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 100


State 74

   22 stms: RETURN . exp SEMI

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    exp  go to state 101


State 75

   24 stms: BREAK . SEMI

    SEMI  shift, and go to state 102


State 76

   23 stms: NEXT . SEMI

    SEMI  shift, and go to state 103


State 77

   25 stms: PRINT . LPAR ids RPAR SEMI
   26     | PRINT . LPAR STRING RPAR SEMI
   27     | PRINT . LPAR ID exp RPAR SEMI

    LPAR  shift, and go to state 104


State 78

   28 stms: INPUT . LPAR ID RPAR SEMI

    LPAR  shift, and go to state 105


State 79

   17 stms: decls .

    $default  reduce using rule 17 (stms)


State 80

    6 decl: ID LPAR RPAR DPOINTS type LCBRACE stms . RCBRACE SEMI

    RCBRACE  shift, and go to state 106


State 81

    7 decl: ID LPAR argdefs RPAR DPOINTS type LCBRACE . stms RCBRACE SEMI

    ID      shift, and go to state 71
    DEFINE  shift, and go to state 2
    IF      shift, and go to state 72
    WHILE   shift, and go to state 73
    RETURN  shift, and go to state 74
    BREAK   shift, and go to state 75
    NEXT    shift, and go to state 76
    PRINT   shift, and go to state 77
    INPUT   shift, and go to state 78

    decls  go to state 79
    decl   go to state 5
    ids    go to state 6
    stms   go to state 107


State 82

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp
   54    | ID ASSIGN exp .

    OR         shift, and go to state 57
    AND        shift, and go to state 58
    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69

    $default  reduce using rule 54 (exp)


State 83

   53 exp: LPAR exp RPAR .

    $default  reduce using rule 53 (exp)


State 84

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   44    | exp OR exp .
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    AND        shift, and go to state 58
    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69

    $default  reduce using rule 44 (exp)


State 85

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   43    | exp AND exp .
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69

    $default  reduce using rule 43 (exp)


State 86

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   45    | exp EQUALS exp .
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66
    DIV  shift, and go to state 67
    MUL  shift, and go to state 68
    POW  shift, and go to state 69

    EQUALS     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER     error (nonassociative)
    LESSEQU    error (nonassociative)
    BIGGEREQU  error (nonassociative)
    NOTEQU     error (nonassociative)

    $default  reduce using rule 45 (exp)


State 87

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   47    | exp LESS exp .
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66
    DIV  shift, and go to state 67
    MUL  shift, and go to state 68
    POW  shift, and go to state 69

    EQUALS     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER     error (nonassociative)
    LESSEQU    error (nonassociative)
    BIGGEREQU  error (nonassociative)
    NOTEQU     error (nonassociative)

    $default  reduce using rule 47 (exp)


State 88

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   48    | exp BIGGER exp .
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66
    DIV  shift, and go to state 67
    MUL  shift, and go to state 68
    POW  shift, and go to state 69

    EQUALS     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER     error (nonassociative)
    LESSEQU    error (nonassociative)
    BIGGEREQU  error (nonassociative)
    NOTEQU     error (nonassociative)

    $default  reduce using rule 48 (exp)


State 89

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   49    | exp LESSEQU exp .
   50    | exp . BIGGEREQU exp

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66
    DIV  shift, and go to state 67
    MUL  shift, and go to state 68
    POW  shift, and go to state 69

    EQUALS     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER     error (nonassociative)
    LESSEQU    error (nonassociative)
    BIGGEREQU  error (nonassociative)
    NOTEQU     error (nonassociative)

    $default  reduce using rule 49 (exp)


State 90

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp
   50    | exp BIGGEREQU exp .

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66
    DIV  shift, and go to state 67
    MUL  shift, and go to state 68
    POW  shift, and go to state 69

    EQUALS     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER     error (nonassociative)
    LESSEQU    error (nonassociative)
    BIGGEREQU  error (nonassociative)
    NOTEQU     error (nonassociative)

    $default  reduce using rule 50 (exp)


State 91

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   46    | exp NOTEQU exp .
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66
    DIV  shift, and go to state 67
    MUL  shift, and go to state 68
    POW  shift, and go to state 69

    EQUALS     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER     error (nonassociative)
    LESSEQU    error (nonassociative)
    BIGGEREQU  error (nonassociative)
    NOTEQU     error (nonassociative)

    $default  reduce using rule 46 (exp)


State 92

   37 exp: exp . ADD exp
   37    | exp ADD exp .
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    DIV  shift, and go to state 67
    MUL  shift, and go to state 68
    POW  shift, and go to state 69

    $default  reduce using rule 37 (exp)


State 93

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   38    | exp SUB exp .
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    DIV  shift, and go to state 67
    MUL  shift, and go to state 68
    POW  shift, and go to state 69

    $default  reduce using rule 38 (exp)


State 94

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   40    | exp DIV exp .
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    POW  shift, and go to state 69

    $default  reduce using rule 40 (exp)


State 95

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   39    | exp MUL exp .
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    POW  shift, and go to state 69

    $default  reduce using rule 39 (exp)


State 96

   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   41    | exp POW exp .
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    POW  shift, and go to state 69

    $default  reduce using rule 41 (exp)


State 97

    6 decl: ID LPAR . RPAR DPOINTS type LCBRACE stms RCBRACE SEMI
    7     | ID LPAR . argdefs RPAR DPOINTS type LCBRACE stms RCBRACE SEMI
   53 exp: LPAR . exp RPAR

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 108
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    RPAR     shift, and go to state 14
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    argdefs  go to state 15
    argdef   go to state 16
    exp      go to state 52


State 98

   18 stms: ID exp . SEMI
   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    SEMI       shift, and go to state 109
    OR         shift, and go to state 57
    AND        shift, and go to state 58
    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69


State 99

   19 stms: IF exp . THEN LCBRACE stms RCBRACE SEMI
   20     | IF exp . THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI
   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    THEN       shift, and go to state 110
    OR         shift, and go to state 57
    AND        shift, and go to state 58
    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69


State 100

   21 stms: WHILE exp . DO LCBRACE stms RCBRACE SEMI
   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    DO         shift, and go to state 111
    OR         shift, and go to state 57
    AND        shift, and go to state 58
    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69


State 101

   22 stms: RETURN exp . SEMI
   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    SEMI       shift, and go to state 112
    OR         shift, and go to state 57
    AND        shift, and go to state 58
    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69


State 102

   24 stms: BREAK SEMI .

    $default  reduce using rule 24 (stms)


State 103

   23 stms: NEXT SEMI .

    $default  reduce using rule 23 (stms)


State 104

   25 stms: PRINT LPAR . ids RPAR SEMI
   26     | PRINT LPAR . STRING RPAR SEMI
   27     | PRINT LPAR . ID exp RPAR SEMI

    ID      shift, and go to state 113
    STRING  shift, and go to state 114

    ids  go to state 115


State 105

   28 stms: INPUT LPAR . ID RPAR SEMI

    ID  shift, and go to state 116


State 106

    6 decl: ID LPAR RPAR DPOINTS type LCBRACE stms RCBRACE . SEMI

    SEMI  shift, and go to state 117


State 107

    7 decl: ID LPAR argdefs RPAR DPOINTS type LCBRACE stms . RCBRACE SEMI

    RCBRACE  shift, and go to state 118


State 108

   31 argdef: ID . DPOINTS type
   32 exp: ID .
   54    | ID . ASSIGN exp

    DPOINTS  shift, and go to state 26
    ASSIGN   shift, and go to state 51

    $default  reduce using rule 32 (exp)


State 109

   18 stms: ID exp SEMI .

    $default  reduce using rule 18 (stms)


State 110

   19 stms: IF exp THEN . LCBRACE stms RCBRACE SEMI
   20     | IF exp THEN . LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI

    LCBRACE  shift, and go to state 119


State 111

   21 stms: WHILE exp DO . LCBRACE stms RCBRACE SEMI

    LCBRACE  shift, and go to state 120


State 112

   22 stms: RETURN exp SEMI .

    $default  reduce using rule 22 (stms)


State 113

   15 ids: ID .
   16    | ID . COMMA ids
   27 stms: PRINT LPAR ID . exp RPAR SEMI

    INTEGER  shift, and go to state 38
    FLOATER  shift, and go to state 39
    LSTRING  shift, and go to state 40
    ID       shift, and go to state 41
    BOOLLIT  shift, and go to state 42
    LPAR     shift, and go to state 43
    COMMA    shift, and go to state 8
    NOT      shift, and go to state 44
    SUB      shift, and go to state 45
    MOD      shift, and go to state 46

    $default  reduce using rule 15 (ids)

    exp  go to state 121


State 114

   26 stms: PRINT LPAR STRING . RPAR SEMI

    RPAR  shift, and go to state 122


State 115

   25 stms: PRINT LPAR ids . RPAR SEMI

    RPAR  shift, and go to state 123


State 116

   28 stms: INPUT LPAR ID . RPAR SEMI

    RPAR  shift, and go to state 124


State 117

    6 decl: ID LPAR RPAR DPOINTS type LCBRACE stms RCBRACE SEMI .

    $default  reduce using rule 6 (decl)


State 118

    7 decl: ID LPAR argdefs RPAR DPOINTS type LCBRACE stms RCBRACE . SEMI

    SEMI  shift, and go to state 125


State 119

   19 stms: IF exp THEN LCBRACE . stms RCBRACE SEMI
   20     | IF exp THEN LCBRACE . stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI

    ID      shift, and go to state 71
    DEFINE  shift, and go to state 2
    IF      shift, and go to state 72
    WHILE   shift, and go to state 73
    RETURN  shift, and go to state 74
    BREAK   shift, and go to state 75
    NEXT    shift, and go to state 76
    PRINT   shift, and go to state 77
    INPUT   shift, and go to state 78

    decls  go to state 79
    decl   go to state 5
    ids    go to state 6
    stms   go to state 126


State 120

   21 stms: WHILE exp DO LCBRACE . stms RCBRACE SEMI

    ID      shift, and go to state 71
    DEFINE  shift, and go to state 2
    IF      shift, and go to state 72
    WHILE   shift, and go to state 73
    RETURN  shift, and go to state 74
    BREAK   shift, and go to state 75
    NEXT    shift, and go to state 76
    PRINT   shift, and go to state 77
    INPUT   shift, and go to state 78

    decls  go to state 79
    decl   go to state 5
    ids    go to state 6
    stms   go to state 127


State 121

   27 stms: PRINT LPAR ID exp . RPAR SEMI
   37 exp: exp . ADD exp
   38    | exp . SUB exp
   39    | exp . MUL exp
   40    | exp . DIV exp
   41    | exp . POW exp
   43    | exp . AND exp
   44    | exp . OR exp
   45    | exp . EQUALS exp
   46    | exp . NOTEQU exp
   47    | exp . LESS exp
   48    | exp . BIGGER exp
   49    | exp . LESSEQU exp
   50    | exp . BIGGEREQU exp

    RPAR       shift, and go to state 128
    OR         shift, and go to state 57
    AND        shift, and go to state 58
    EQUALS     shift, and go to state 59
    LESS       shift, and go to state 60
    BIGGER     shift, and go to state 61
    LESSEQU    shift, and go to state 62
    BIGGEREQU  shift, and go to state 63
    NOTEQU     shift, and go to state 64
    ADD        shift, and go to state 65
    SUB        shift, and go to state 66
    DIV        shift, and go to state 67
    MUL        shift, and go to state 68
    POW        shift, and go to state 69


State 122

   26 stms: PRINT LPAR STRING RPAR . SEMI

    SEMI  shift, and go to state 129


State 123

   25 stms: PRINT LPAR ids RPAR . SEMI

    SEMI  shift, and go to state 130


State 124

   28 stms: INPUT LPAR ID RPAR . SEMI

    SEMI  shift, and go to state 131


State 125

    7 decl: ID LPAR argdefs RPAR DPOINTS type LCBRACE stms RCBRACE SEMI .

    $default  reduce using rule 7 (decl)


State 126

   19 stms: IF exp THEN LCBRACE stms . RCBRACE SEMI
   20     | IF exp THEN LCBRACE stms . RCBRACE ELSE LCBRACE stms RCBRACE SEMI

    RCBRACE  shift, and go to state 132


State 127

   21 stms: WHILE exp DO LCBRACE stms . RCBRACE SEMI

    RCBRACE  shift, and go to state 133


State 128

   27 stms: PRINT LPAR ID exp RPAR . SEMI

    SEMI  shift, and go to state 134


State 129

   26 stms: PRINT LPAR STRING RPAR SEMI .

    $default  reduce using rule 26 (stms)


State 130

   25 stms: PRINT LPAR ids RPAR SEMI .

    $default  reduce using rule 25 (stms)


State 131

   28 stms: INPUT LPAR ID RPAR SEMI .

    $default  reduce using rule 28 (stms)


State 132

   19 stms: IF exp THEN LCBRACE stms RCBRACE . SEMI
   20     | IF exp THEN LCBRACE stms RCBRACE . ELSE LCBRACE stms RCBRACE SEMI

    ELSE  shift, and go to state 135
    SEMI  shift, and go to state 136


State 133

   21 stms: WHILE exp DO LCBRACE stms RCBRACE . SEMI

    SEMI  shift, and go to state 137


State 134

   27 stms: PRINT LPAR ID exp RPAR SEMI .

    $default  reduce using rule 27 (stms)


State 135

   20 stms: IF exp THEN LCBRACE stms RCBRACE ELSE . LCBRACE stms RCBRACE SEMI

    LCBRACE  shift, and go to state 138


State 136

   19 stms: IF exp THEN LCBRACE stms RCBRACE SEMI .

    $default  reduce using rule 19 (stms)


State 137

   21 stms: WHILE exp DO LCBRACE stms RCBRACE SEMI .

    $default  reduce using rule 21 (stms)


State 138

   20 stms: IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE . stms RCBRACE SEMI

    ID      shift, and go to state 71
    DEFINE  shift, and go to state 2
    IF      shift, and go to state 72
    WHILE   shift, and go to state 73
    RETURN  shift, and go to state 74
    BREAK   shift, and go to state 75
    NEXT    shift, and go to state 76
    PRINT   shift, and go to state 77
    INPUT   shift, and go to state 78

    decls  go to state 79
    decl   go to state 5
    ids    go to state 6
    stms   go to state 139


State 139

   20 stms: IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms . RCBRACE SEMI

    RCBRACE  shift, and go to state 140


State 140

   20 stms: IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE . SEMI

    SEMI  shift, and go to state 141


State 141

   20 stms: IF exp THEN LCBRACE stms RCBRACE ELSE LCBRACE stms RCBRACE SEMI .

    $default  reduce using rule 20 (stms)
